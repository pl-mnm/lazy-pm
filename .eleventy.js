const pluginWebc = require("@11ty/eleventy-plugin-webc");
const htmlmin = require('html-minifier-terser');
const postcss = require('postcss');
const postcssImport = require('postcss-import');
const tailwind = require('tailwindcss');
const cssNano = require('cssnano');
const autoprefixer = require('autoprefixer');

module.exports = function(config) {
  config.addPlugin(pluginWebc, {
    components: "src/_components/**/*.webc",
  });

  // Minify html
  config.addTransform('html-minify', (content, path) => {
    if (path && path.endsWith('.html')) {
      return htmlmin.minify(
        content, {
          collapseBooleanAttributes: true,
          collapseWhitespace: true,
          decodeEntities: true,
          includeAutoGeneratedTags: false,
          removeComments: true,
        }
      );
    }
  
    return content;
  });

  // Process postcss with eleventy
  // https://pepelsbey.dev/articles/eleventy-css-js/
  config.addTemplateFormats('css');
  config.addExtension('css', {
    outputFileExtension: 'css',
    compile: async (content, path) => {
      // Ignore files that start with underscore
      if (path.split('/').pop().startsWith('_')) {
        return;
      }
      return async () => {
        let output = await postcss([
          postcssImport,
          autoprefixer,
          cssNano,
          tailwind,
        ]).process(content, {
          from: path,
        });

        return output.css;
      }
    }
  });

  return {
    dir: {
      input: "src",
      output: "web"
    },
  };
};